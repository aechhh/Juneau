E_VALUETYPE_INT32 = 0x0
E_VALUETYPE_FLOAT32 = 0x1
E_VALUETYPE_BOOL = 0x2
E_VALUETYPE_BYTE = 0x3
E_VALUETYPE_STRING = 0x4
E_VALUETYPE_WIDESTRING = 0x5
E_VALUETYPE_RESOURCE_HANDLE = 0x6
E_VALUETYPE_RESOURCE_ID = 0x7
E_VALUETYPE_INSTANCE = 0x8
E_VALUETYPE_ENUM = 0x9
E_VALUETYPE_RW_VPU_VECTOR2 = 0xa
E_VALUETYPE_RW_VPU_VECTOR3 = 0xb
E_VALUETYPE_RW_VPU_VECTOR4 = 0xc
E_VALUETYPE_RW_VPU_MATRIX44 = 0xd
E_VALUETYPE_RW_VPU_MATRIX44AFFINE = 0xe
E_VALUETYPE_COUNT = 0xf
E_VALUETYPE_VARIABLE_ARRAY_MASK = 0xfff
E_VALUETYPE_VARIABLE_ARRAY = 0x1000
E_VALUETYPE_INVALID = 0xffff

field_types = {
    0x0: "E_VALUETYPE_INT32",
    0x1: "E_VALUETYPE_FLOAT32",
    0x2: "E_VALUETYPE_BOOL",
    0x3: "E_VALUETYPE_BYTE",
    0x4: "E_VALUETYPE_STRING",
    0x5: "E_VALUETYPE_WIDESTRING",
    0x6: "E_VALUETYPE_RESOURCE_HANDLE",
    0x7: "E_VALUETYPE_RESOURCE_ID",
    0x8: "E_VALUETYPE_INSTANCE",
    0x9: "E_VALUETYPE_ENUM",
    0xa: "E_VALUETYPE_RW_VPU_VECTOR2",
    0xb: "E_VALUETYPE_RW_VPU_VECTOR3",
    0xc: "E_VALUETYPE_RW_VPU_VECTOR4",
    0xd: "E_VALUETYPE_RW_VPU_MATRIX44",
    0xe: "E_VALUETYPE_RW_VPU_MATRIX44AFFINE",
    0xf: "E_VALUETYPE_COUNT",
    0xfff: "E_VALUETYPE_VARIABLE_ARRAY_MASK",
    0x1000: "E_VALUETYPE_VARIABLE_ARRAY",
    0xffff: "E_VALUETYPE_INVALID"
}

def get_field_type_name(enum):
    name = field_types.get(enum & E_VALUETYPE_VARIABLE_ARRAY_MASK, f'{enum & E_VALUETYPE_VARIABLE_ARRAY_MASK:04X}')

    if enum & E_VALUETYPE_VARIABLE_ARRAY == E_VALUETYPE_VARIABLE_ARRAY:
        return f"List: {name[len('E_VALUETYPE_'):].lower().capitalize()}"

    if name[0].isnumeric():
        return name

    return name[len("E_VALUETYPE_"):].lower().capitalize()